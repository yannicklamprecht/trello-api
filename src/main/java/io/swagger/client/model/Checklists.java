/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Checklists
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-05-12T10:27:01.792+02:00[Europe/Berlin]")
public class Checklists {
  @SerializedName("idBoard")
  private String idBoard = null;

  @SerializedName("idCard")
  private String idCard = null;

  @SerializedName("idChecklistSource")
  private String idChecklistSource = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pos")
  private String pos = null;

  public Checklists idBoard(String idBoard) {
    this.idBoard = idBoard;
    return this;
  }

   /**
   * id of the board that the checklist should be added to
   * @return idBoard
  **/
  @Schema(description = "id of the board that the checklist should be added to")
  public String getIdBoard() {
    return idBoard;
  }

  public void setIdBoard(String idBoard) {
    this.idBoard = idBoard;
  }

  public Checklists idCard(String idCard) {
    this.idCard = idCard;
    return this;
  }

   /**
   * id of the card that the checklist should be added to
   * @return idCard
  **/
  @Schema(description = "id of the card that the checklist should be added to")
  public String getIdCard() {
    return idCard;
  }

  public void setIdCard(String idCard) {
    this.idCard = idCard;
  }

  public Checklists idChecklistSource(String idChecklistSource) {
    this.idChecklistSource = idChecklistSource;
    return this;
  }

   /**
   * The id of the source checklist to copy into a new checklist.
   * @return idChecklistSource
  **/
  @Schema(description = "The id of the source checklist to copy into a new checklist.")
  public String getIdChecklistSource() {
    return idChecklistSource;
  }

  public void setIdChecklistSource(String idChecklistSource) {
    this.idChecklistSource = idChecklistSource;
  }

  public Checklists name(String name) {
    this.name = name;
    return this;
  }

   /**
   * a string with a length from 0 to 16384
   * @return name
  **/
  @Schema(description = "a string with a length from 0 to 16384")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Checklists pos(String pos) {
    this.pos = pos;
    return this;
  }

   /**
   * A position. top , bottom , or a positive number.
   * @return pos
  **/
  @Schema(description = "A position. top , bottom , or a positive number.")
  public String getPos() {
    return pos;
  }

  public void setPos(String pos) {
    this.pos = pos;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Checklists checklists = (Checklists) o;
    return Objects.equals(this.idBoard, checklists.idBoard) &&
        Objects.equals(this.idCard, checklists.idCard) &&
        Objects.equals(this.idChecklistSource, checklists.idChecklistSource) &&
        Objects.equals(this.name, checklists.name) &&
        Objects.equals(this.pos, checklists.pos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idBoard, idCard, idChecklistSource, name, pos);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Checklists {\n");
    
    sb.append("    idBoard: ").append(toIndentedString(idBoard)).append("\n");
    sb.append("    idCard: ").append(toIndentedString(idCard)).append("\n");
    sb.append("    idChecklistSource: ").append(toIndentedString(idChecklistSource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pos: ").append(toIndentedString(pos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
